class Person:
    def __init__(self, name, age):
        self.name = name
        self.age = age
        self.child = None 

    def add_child(self, child):
        self.child = child

    def print_family_line(self):
        print(self.name, self.age, "years old") 
        if self.child is not None:
           self.child.print_family_line()

    def count_large_age_gaps(self, gap_limit):
        count = 0
        if self.child:
            age_gap = self.age - self.child.age 
            if age_gap > gap_limit: 
                count = 1
            count += self.child.count_large_age_gaps(gap_limit)
        return count 
        



def build_family_line():
    username = input("What is the person's name? ")
    userage = int(input("What is the person's age? "))
    
    person = Person(username, userage)


    has_child = input("Does the person have a child? (yes or no) ")
    
    if has_child == "yes":
        child_person = build_family_line()
        person.add_child(child_person)

    return person 

print("Welcome to the Generational Gap Checker!\n")


root = build_family_line()

print("\nHere is your family line:\n")
root.print_family_line()


gap_value = int(input("Enter the minimum age gap limit: "))
gap_count = root.count_large_age_gaps(gap_value)
print ("Number of generations with an age gap greater than", gap_value,":", gap_count)